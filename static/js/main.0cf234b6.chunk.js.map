{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","handleClick","event","currentTarget","value","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","setField","setQuery","query","resetSearch","onChange","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedUser","resetTodo","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","App","useState","setTodos","setSelectedTodo","setSelectedUser","field","a","todosFromAPI","todoId","filteredTodos","filter","userFromServer","useEffect","getTodosFromServer","toLowerCase","includes","length","selectUser","ReactDOM","render","document","getElementById"],"mappings":"2QAUaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEMC,EAAc,SAACC,GACnBH,GAAYG,EAAMC,cAAcC,QAGlC,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAGJ,gCAEGP,EAAMQ,KAAI,SAAAC,GACT,IAAQC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAEnB,OACE,qBACE,UAAQ,OACRL,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BG,IAC9B,oBAAIH,UAAU,eAAd,SAEGK,GACC,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWM,IAAW,CACpB,mBAAoBD,EACpB,mBAAoBA,IAHxB,SAMGD,MAGL,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLR,MAAOI,EACPK,QAASZ,EALX,SAOE,sBAAMI,UAAU,OAAhB,SACE,mBAAGA,UAAWM,IAAW,MAAO,CAC9B,SAAUH,KAAE,OAAKR,QAAL,IAAKA,OAAL,EAAKA,EAAcQ,IAC/B,eAAgBA,KAAE,OAAKR,QAAL,IAAKA,OAAL,EAAKA,EAAcQ,gBAjCxCA,YCnCNM,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,SACAC,EAFyC,EAEzCA,SACAC,EAHyC,EAGzCA,MACAC,EAJyC,EAIzCA,YAJyC,OAMzC,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,SAAU,SAAAjB,GACRa,EAASb,EAAMkB,OAAOhB,QAH1B,UAME,wBACEA,MAAM,MADR,iBAMA,wBACEA,MAAM,SADR,oBAMA,wBACEA,MAAM,YADR,8BAQN,oBAAGC,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVgB,YAAY,YACZjB,MAAOa,EACPE,SAAU,SAAAjB,GACRc,EAASd,EAAMkB,OAAOhB,UAG1B,sBAAMC,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdY,GACC,sBAAMZ,UAAU,gBAAgBiB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRX,KAAK,SACLP,UAAU,SACVD,MAAM,GACNS,QAASK,aC9DRM,G,MAAmB,kBAC9B,qBAAKnB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCMNoB,EAA6B,SAAC,GAIpC,IAHLzB,EAGI,EAHJA,aACA0B,EAEI,EAFJA,aACAC,EACI,EADJA,UAEQnB,EAAyBR,EAAzBQ,GAAIC,EAAqBT,EAArBS,MAAOC,EAAcV,EAAdU,UAEnB,OACE,sBAAKL,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbqB,EAGA,sBAAKrB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIaG,KAIb,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRD,MAAOI,EACPK,QAASc,OAIb,sBAAKtB,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGI,IAGH,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UACGK,EACG,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGuB,KAAI,iBAAYF,EAAaG,OAAhC,SACGH,EAAaI,gBAlCtB,cAAC,EAAD,QCXR,SAASC,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAAMC,EAAW,kBAAMX,EAAY,WAE7BY,EAAU,SAACC,GAAD,OAAoBb,EAAG,iBAAiBa,KCVlDC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOhD,EAAP,KAAciD,EAAd,KACA,EAAwCD,mBAAsB,MAA9D,mBAAO9C,EAAP,KAAqBgD,EAArB,KACA,EAAwCF,mBAAsB,MAA9D,mBAAOpB,EAAP,KAAqBuB,EAArB,KACA,EAA0BH,mBAAS,OAAnC,mBAAOI,EAAP,KAAcnC,EAAd,KACA,EAA0B+B,mBAAS,IAAnC,mBAAO7B,EAAP,KAAcD,EAAd,KALiC,4CAOjC,4BAAAmC,EAAA,sEAC6BT,IAD7B,OACQU,EADR,OAGEL,EAASK,GAHX,4CAPiC,kEAiBjC,WAA0BC,GAA1B,mBAAAF,EAAA,6DACQG,EAAgBxD,EAAMyD,QAAO,SAAAhD,GAAI,OAAIA,EAAKC,KAAO6C,KAC/CT,EAAWU,EAAc,GAAzBV,OAFV,SAG+BD,EAAQC,GAHvC,OAGQY,EAHR,OAKEP,EAAgBO,GALlB,2CAjBiC,wBAajCC,qBAAU,YAbuB,mCAc/BC,KACC,IAUH,IAYMJ,EAAgBxD,EACnByD,QAAO,SAAAhD,GACN,OAAQ2C,GACN,IAAK,SACH,OAAQ3C,EAAKG,UAEf,IAAK,YACH,OAAOH,EAAKG,UAGd,QACE,OAAO,MAGZ6C,QAAO,SAAAhD,GAAI,OAAIA,EAAKE,MAAMkD,cACxBC,SAAS3C,EAAM0C,kBAMpB,OACE,qCACE,qBAAKtD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,SAAUA,EACVC,SAAUA,EACVC,MAAOA,EACPC,YAhBM,WAClBF,EAAS,SAmBD,sBAAKX,UAAU,QAAf,UACoB,IAAjBP,EAAM+D,QAAgB,cAAC,EAAD,IACvB,cAAC,EAAD,CACE/D,MAAOwD,EACPvD,WArDK,SAACsD,GAClB,IAAMC,EAAgBxD,EAAMyD,QAAO,SAAAhD,GAAI,OAAIA,EAAKC,KAAO6C,KAEvDL,EAAgBM,EAAc,IA5BC,oCA6B/BQ,CAAWT,IAkDCrD,aAAcA,cAOvBA,GACC,cAAC,EAAD,CACEA,aAAcA,EACd0B,aAAcA,EACdC,UA1DU,WAChBqB,EAAgB,MAChBC,EAAgB,aC5CpBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0cf234b6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todoId: number) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    selectTodo(+event.currentTarget.value);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  value={id}\n                  onClick={handleClick}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye': id !== selectedTodo?.id,\n                      'fa-eye-slash': id === selectedTodo?.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setField: (field: string) => void;\n  setQuery: (field: string) => void;\n  query: string,\n  resetSearch: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setField,\n  setQuery,\n  query,\n  resetSearch,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={event => {\n            setField(event.target.value);\n          }}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n\n          <option\n            value=\"active\"\n          >\n            Active\n          </option>\n\n          <option\n            value=\"completed\"\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            value=\"\"\n            onClick={resetSearch}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  selectedUser: User | null;\n  resetTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  selectedUser,\n  resetTodo,\n}) => {\n  const { id, title, completed } = selectedTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              { `Todo #${id}` }\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              value={id}\n              onClick={resetTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [field, setField] = useState('all');\n  const [query, setQuery] = useState('');\n\n  async function getTodosFromServer() {\n    const todosFromAPI = await getTodos();\n\n    setTodos(todosFromAPI);\n  }\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  async function selectUser(todoId: number) {\n    const filteredTodos = todos.filter(todo => todo.id === todoId);\n    const { userId } = filteredTodos[0];\n    const userFromServer = await getUser(userId);\n\n    setSelectedUser(userFromServer);\n  }\n\n  const selectTodo = (todoId: number) => {\n    const filteredTodos = todos.filter(todo => todo.id === todoId);\n\n    setSelectedTodo(filteredTodos[0]);\n    selectUser(todoId);\n  };\n\n  const resetTodo = () => {\n    setSelectedTodo(null);\n    setSelectedUser(null);\n  };\n\n  const filteredTodos = todos\n    .filter(todo => {\n      switch (field) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n          break;\n\n        default:\n          return true;\n      }\n    })\n    .filter(todo => todo.title.toLowerCase()\n      .includes(query.toLowerCase()));\n\n  const resetSearch = () => {\n    setQuery('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setField={setField}\n                setQuery={setQuery}\n                query={query}\n                resetSearch={resetSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                selectTodo={selectTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          selectedUser={selectedUser}\n          resetTodo={resetTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}