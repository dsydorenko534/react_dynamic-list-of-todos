{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","selectValue","filterValue","hundleSelect","hundleChange","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","defaultTodo","userId","TodoModal","useState","user","setUser","isLoader","setIsLoader","useEffect","getUserAsync","a","receivedUser","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","setSelectValue","setFilterValue","getTodosAsync","receivedTodos","selectTodo","todosForRender","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b959948.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number | undefined;\n  onSelect: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selectedTodoId === id },\n            )}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      { 'fa-eye': selectedTodoId !== id },\n                      { 'fa-eye-slash': selectedTodoId === id },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  selectValue: string;\n  filterValue: string;\n  hundleSelect: (value: string) => void;\n  hundleChange: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectValue,\n  filterValue,\n  hundleSelect,\n  hundleChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectValue}\n          onChange={(event) => hundleSelect(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={filterValue}\n        onChange={(event) => hundleChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {filterValue && (\n          <button\n            aria-label=\"close\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => hundleChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nconst defaultTodo = {\n  id: 0,\n  title: 'no title',\n  completed: false,\n  userId: 0,\n};\n\ntype Props = {\n  todo: Todo;\n  onSelect: (todo: Todo) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelect }) => {\n  const [user, setUser] = useState<User>();\n  const [isLoader, setIsLoader] = useState(true);\n\n  useEffect(() => {\n    const getUserAsync = async () => {\n      const receivedUser = await getUser(todo.userId);\n\n      setUser(receivedUser);\n      setIsLoader(false);\n    };\n\n    getUserAsync();\n  }, [todo.id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoader ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              aria-label=\"close\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelect(defaultTodo)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n              >\n                {\n                  todo.completed\n                    ? 'Done'\n                    : 'Planned'\n                }\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nconst defaultTodo = {\n  id: 0,\n  title: 'no title',\n  completed: false,\n  userId: 0,\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoader, setIsLoader] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(defaultTodo);\n  const [selectValue, setSelectValue] = useState('all');\n  const [filterValue, setFilterValue] = useState('');\n\n  useEffect(() => {\n    const getTodosAsync = async () => {\n      const receivedTodos = await getTodos();\n\n      setTodos(receivedTodos);\n      setIsLoader(false);\n    };\n\n    getTodosAsync();\n  }, []);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const hundleSelect = (value: string) => {\n    setSelectValue(value);\n  };\n\n  const hundleChange = (value: string) => {\n    setFilterValue(value);\n  };\n\n  const todosForRender\n    = todos\n      .filter(({ completed }) => {\n        switch (selectValue) {\n          case 'active':\n            return !completed;\n\n          case 'completed':\n            return completed;\n\n          default:\n            return true;\n        }\n      })\n      .filter(({ title }) => (\n        title.toLowerCase().includes(filterValue.toLowerCase())\n      ));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectValue={selectValue}\n                filterValue={filterValue}\n                hundleSelect={hundleSelect}\n                hundleChange={hundleChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoader\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todosForRender}\n                    selectedTodoId={selectedTodo.id}\n                    onSelect={selectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo.id\n      && (\n        <TodoModal\n          todo={selectedTodo}\n          onSelect={selectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}